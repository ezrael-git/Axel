import https as https

class Request 
  meth constructor (url, headers)
    @url = url
    @headers = headers
  end
end

class Response
  meth constructor (request, data, status)
    @request = request
    @data = data
    @status = status
  end
end

class HTTPS
  meth constructor ()
    @record = []
  end

  private request
  meth request (options)
    /*
    Perform a request issued to the url.
    Interface.
    Arguments {
      - options <Object> {
        - url <string>
        - method <string>
        - headers <Object>
        - auth <Object> : basic auth
      }
    }
    */
    https.request(options, res => {
      def data = [];
      def status = res.statusCode
      
      res.on('data', chunk => {
        data.push(chunk)
      });

      res.on('end', () => {
        imm parsedData = JSON.parse(Buffer.concat(data).toString())
        def request = new Request(url, [])
        def response = new Response(request, parsedData, status)
        return response
      })
    })
  end

  meth get (options)
    options["method"] = "GET"
    def response = @request(options)
    return response
  end

  meth put (options)
    options["method"] = "PUT"
    return @request(options)
  end

  meth delete (options)
    options["method"] = "DELETE"
    return @request(options)
  end
  
end
